#!/bin/sh
#
#get_memory_prerformance
# 1.1.1.1 接口概念
# 物理层网络接口错误指标
#  1.1.1.2 输入
#  无
#   1.1.1.3 输出
#   total    系统总内存
#   used    用户内存
#    free    空闲内存


exists()
{
	type $1 2&>1 /dev/null
	retcode=$?
	return $retcode
}
#lscfg -vp |grep -p DIMM 查看内存物理信息
AIX(){ vmstat -v|awk '{if(NR==1)total=$1*4;if(NR==3)free=$1*4;}END{print "-",total,total-free,free;}';}
Digital(){ :;}
FreeBSD(){ 
total=$(awk '/avail memory/{print $4/1024;}' /var/run/dmesg.boot)
free=$(top -b  -s 1 -d 1 0|awk '/Mem/{print $12*1024}')
used=$(echo  "$total-$free"|bc)
echo  $total' '$used' '$free
}
HP_UX(){ :;}
Irix(){ :;}
#Linux(){ free|awk 'NR==2{print strftime("%T"),$2,$3,$4}';}
Linux(){ free|awk 'NR==2{print $2,$3,$4}';}
OS390(){ :;}
SCO_SV(){ free=`vmstat 1 1|awk 'NR==5 {print $4}'|sed 's/...$//'`  
         total=`memsize|sed 's/...$//'`
         used=`echo  "$total-$free"|bc`
         echo  '- '$total' '$used' '$free;}
SunOS(){ #free=`vmstat 1 1|awk 'NR==3 {print $5}'`
         #total=`prtconf|grep 'Memory'|awk '{print $3}'|sed 's/$/000/g'`
         #used=`echo  "$total-$free"|bc`
         #echo  '- '$total' '$used' '$free;}
	 free.py; }
Tru64(){ :;}
UnixWare(){ df -kP|tail -n+2|sed 's/%//g';}
#Win32
default(){ df -k|tail +2|sed 's/%//g';}

INTERVAL=10	# Defines the total number of sampling intervals
HOST=`hostname`
OS=`uname`	# Defines the UNIX flavor
SECS=30		# Defines the number of seconds for each sample
STATCOUNT=0	# Initialize a loop counter to 0, zero
#DATE=`date "+%Y-%m-%d %H:%M:%S"`

###################################################
##### SETUP THE ENVIRONMENT FOR EACH OS HERE ######
###################################################
$OS
#x=`$OS $*|tr "\n" " "`
#echo $x|sed "s/[0123456789:\-]* /${DATE} /"

# These "F-numbers" point to the correct field in the
# command output for each UNIX flavor.

       #echo " The Operating System is $OS "
##Linux
#exit
#case $OS in
#AIX)
#	$AIX
#       ;;
#HP-UX)
#	$HP_UX
#       ;;
#Linux)
#	echo $Linux
#	exec $Linux
#       ;;
#SCO_SV)
#	$SCO_SV
#       ;;
#SunOS)  
#	$SunOS
#       ;;
#UnixWare)
#	$UnixWare
#       ;;
#*)# echo " ERROR: $OS is not a supported operating system "
#	$default
#  # echo " ...EXITING... "
#   exit 1
#   ;;
#esac
#
####################################################
######### BEGIN GATHERING STATISTICS HERE ##########
####################################################

