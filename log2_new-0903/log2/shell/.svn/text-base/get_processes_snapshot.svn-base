#!/bin/sh
#
# 1.1.1.1 接口名称
#  get_processes_snapshot
#   1.1.1.2 接口概念
#   操作系统进程列表
#    1.1.1.3 输入
#    无
#     1.1.1.4 输出
#     采集时间、
#     PID
#     USER    
#     PRI（优先级）
#     NI（nice值）
#     VSZ（kb为单位的大小）
#     RSS（内存使用kb）
#     STAT（状态）
#     %CPU（CPU占用率）
#     %MEM（内存占用率）
#     TIME（交互时间）
#     COMMAND（进程名称）

AIX(){date "+%H:%M:%S";ps -eo comm=,pid=,user=,pri=,nice=,vsz=,rss=,stat=,pcpu=,pmem=,time= }
Digital(){ :;}
FreeBSD(){ :;}
HP_UX(){ :;}
Irix(){ :;}
Linux(){ #ps -eo pid,user,pri,nice,vsz,rss,stat,pcpu,pmem,time,etime,stime,comm --sort -pcpu; #|sort -k8 -k9 -r
	date "+%H:%M:%S"
ps -eo comm=,pid=,user=,pri=,nice=,vsz=,rss=,stat=,pcpu=,pmem=,time= --sort -pcpu #|sort -k8 -k9 -r
}
OS390(){ :;}
SCO_SV(){ date "+%H:%M:%S"; ps -eo comm,pid,user,pri,nice,vsz,s,pcpu,size,time|sort -k8 -r;}
SunOS(){ date "+%H:%M:%S"; ps -eo comm,pid,user,pri,nice,vsz,rss,s,pcpu,pmem,time|sort -k9 -k10 -r;}
Tru64(){ :;}
UnixWare(){ df -kP|tail -n+2|sed 's/%//g';}
#Win32
default(){ df -k|tail +2|sed 's/%//g';}

INTERVAL=10	# Defines the total number of sampling intervals
HOST=`hostname`
OS=`uname`	# Defines the UNIX flavor
SECS=30		# Defines the number of seconds for each sample
STATCOUNT=0	# Initialize a loop counter to 0, zero

###################################################
##### SETUP THE ENVIRONMENT FOR EACH OS HERE ######
###################################################
$OS

# These "F-numbers" point to the correct field in the
# command output for each UNIX flavor.

       #echo " The Operating System is $OS "
##Linux
#exit
#case $OS in
#AIX)
#	$AIX
#       ;;
#HP-UX)
#	$HP_UX
#       ;;
#Linux)
#	echo $Linux
#	exec $Linux
#       ;;
#SCO_SV)
#	$SCO_SV
#       ;;
#SunOS)  
#	$SunOS
#       ;;
#UnixWare)
#	$UnixWare
#       ;;
#*)# echo " ERROR: $OS is not a supported operating system "
#	$default
#  # echo " ...EXITING... "
#   exit 1
#   ;;
#esac
#
####################################################
######### BEGIN GATHERING STATISTICS HERE ##########
####################################################
#SCO Format specifiers are:
#        s       S        State
#        user    USER     Effective user ID
#        ruser   RUSER    Real user ID
#        group   GROUP    Effective group ID
#        rgroup  RGROUP   Real group ID
#        pid     PID      Process ID
#        ppid    PPID     Parent process ID
#        pcpu    %CPU     Percentage CPU time used
#        c       C        Processor scheduling
#        pri     PRI      Process priority
#        size    SZ       Process size in blocks
#        nice    NI       Nice value
#        sess    SESSION  Session ID
#        addr    ADDR     Process proc table
#        class   CLASS    Scheduler class
#        wchan   WCHAN    Wait channel
#        time    TIME     Cummulative CPU time
#        etime   ELAPSED  Elasped real time
#        stime   STIME    Start time
#        tty     TTY      Controlling terminal
#        comm    COMMAND  Command name
#        args    COMMAND  Command plus arguments
#        vsz     VSZ      Process size in kilobytes
#        pgid    PGID     Process-group ID
#        uid     UID      Effective user ID
#        f       F        Flags
